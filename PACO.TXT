╔══════════════════════════════════════════════════════════════════════════════╗
║                Welcome to Francinette, a 42 tester framework!                ║
╚═══════════════════════╦══════════════════════════════╦═══════════════════════╝
                        ║            printf            ║
                        ╚══════════════════════════════╝
⠋ Preparing framework⠙ Preparing framework⠹ Preparing framework⠸ Preparing framework⠼ Preparing framework⠴ Preparing framework⠦ Preparing framework⠧ Preparing framework⠇ Preparing framework⠏ Preparing framework⠋ Preparing framework⠙ Preparing framework⠹ Preparing framework⠸ Preparing framework⠼ Preparing framework⠴ Preparing framework⠦ Preparing framework⠧ Preparing framework⠇ Preparing framework⠏ Preparing framework⠋ Preparing framework✔ Preparing framework
⠋ Executing: make fclean all (no bonus)⠙ Executing: make fclean all (no bonus)⠹ Executing: make fclean all (no bonus)⠸ Executing: make fclean all (no bonus)⠼ Executing: make fclean all (no bonus)⠴ Executing: make fclean all (no bonus)⠦ Executing: make fclean all (no bonus)✔ Executing: make fclean all (no bonus)
ℹ Running tests: printfTester (https://github.com/Tripouille/printfTester)
[36m[34m[Mandatory]
[93mcategory: c[0m
[32m1.OK [32m2.OK [32m3.OK [32m4.OK [32m5.OK [32m6.OK [32m7.OK [32m8.OK [32m9.OK [0m
[93mcategory: s[0m
[32m1.OK [32m2.OK [32m3.OK [32m4.OK [32m5.OK [32m6.OK [32m7.OK [32m8.OK [32m9.OK [32m10.OK [0m
[93mcategory: p[0m
[32m1.OK [31mLEAKS.KO [0x6600000066 : 438086664294] [32m2.OK [32m3.OK [32m4.OK [31mLEAKS.KO [0x7fa100000000 : 5] [32m5.OK [31mLEAKS.KO [0x7fa100000000 : 5] [32m6.OK [31mLEAKS.KO [0x6600000066 : 438086664294] [0x6600000066 : 0] [32m7.OK [31mLEAKS.KO [0x6600000066 : 206158430208] [32m8.OK [31mLEAKS.KO [0x6600000066 : 438086664294] [32m9.OK [0m
[93mcategory: d[0m
[32m1.OK [32m2.OK [32m3.OK [32m4.OK [32m5.OK [32m6.OK [32m7.OK [32m8.OK [32m9.OK [32m10.OK [32m11.OK [32m12.OK [32m13.OK [32m14.OK [32m15.OK [32m16.OK [32m17.OK [32m18.OK [32m19.OK [32m20.OK [32m21.OK [32m22.OK [32m23.OK [32m24.OK [32m25.OK [32m26.OK [32m27.OK [32m28.OK [32m29.OK [0m
[93mcategory: i[0m
[32m1.OK [32m2.OK [32m3.OK [32m4.OK [32m5.OK [32m6.OK [32m7.OK [32m8.OK [32m9.OK [32m10.OK [32m11.OK [32m12.OK [32m13.OK [32m14.OK [32m15.OK [32m16.OK [32m17.OK [32m18.OK [32m19.OK [32m20.OK [32m21.OK [32m22.OK [32m23.OK [32m24.OK [32m25.OK [32m26.OK [32m27.OK [32m28.OK [32m29.OK [0m
[93mcategory: u[0m
[32m1.OK [32m2.OK [32m3.OK [32m4.OK [32m5.OK [32m6.OK [32m7.OK [32m8.OK [32m9.OK [32m10.OK [32m11.OK [32m12.OK [32m13.OK [32m14.OK [32m15.OK [32m16.OK [32m17.OK [32m18.OK [32m19.OK [32m20.OK [32m21.OK [32m22.OK [32m23.OK [32m24.OK [32m25.OK [32m26.OK [32m27.OK [32m28.OK [32m29.OK [0m
[93mcategory: x[0m
[32m1.OK [31m2.KO [31mLEAKS.KO [0x6600000066 : 102] [31m3.KO [31m4.KO [31m5.KO [31m6.KO [31m7.KO [31m8.KO [31m9.KO [31m10.KO [31m11.KO [31m12.KO [31m13.KO [31mLEAKS.KO [0x6600000066 : 55] [31m14.KO [31mLEAKS.KO [0x6600000066 : 54] [31m15.KO [31mLEAKS.KO [0x6600000066 : 53] [31m16.KO [31mLEAKS.KO [0x6600000066 : 50] [31m17.KO [31mLEAKS.KO [0x6600000066 : 49] [31m18.KO [31mLEAKS.KO [0x6600000066 : 48] [31m19.KO [31mLEAKS.KO [0x3900000066 : 100] [31m20.KO [31mLEAKS.KO [0x3900000066 : 99] [31m21.KO [31mLEAKS.KO [0x3900000066 : 98] [31m22.KO [31mLEAKS.KO [0x6600000066 : 102] [31m23.KO [31mLEAKS.KO [0x3000000030 : 48] [31m24.KO [31mLEAKS.KO [0x6600000066 : 438086664294] [31m25.KO [31mLEAKS.KO [0x3000000030 : 206158430256] [31m26.KO [31mLEAKS.KO [0x6600000066 : 102] [31m27.KO [31m28.KO [31mLEAKS.KO [0x6600000066 : 438086664294] [31m29.KO [31mLEAKS.KO [0x6400000066 : 54] x_test(59603,0x10b6a7dc0) malloc: Incorrect checksum for freed object 0x7fcde1c05a08: probably modified after being freed.
Corrupt value: 0x6600000066
x_test(59603,0x10b6a7dc0) malloc: *** set a breakpoint in malloc_error_break to debug
[93m30.ABORT [31m30.KO [31m31.KO [31mLEAKS.KO [0x6400000066 : 54] [0m
[93mcategory: X[0m
[32m1.OK [31m2.KO [31mLEAKS.KO [0x4600000046 : 70] [31m3.KO [31m4.KO [31m5.KO [31m6.KO [31m7.KO [31m8.KO [31m9.KO [31m10.KO [31m11.KO [31m12.KO [31m13.KO [31mLEAKS.KO [0x4600000046 : 55] [31m14.KO [31mLEAKS.KO [0x4600000046 : 54] [31m15.KO [31mLEAKS.KO [0x4600000046 : 53] [31m16.KO [31mLEAKS.KO [0x4600000046 : 50] [31m17.KO [31mLEAKS.KO [0x4600000046 : 49] [31m18.KO [31mLEAKS.KO [0x4600000046 : 48] [31m19.KO [31mLEAKS.KO [0x3900000046 : 68] [31m20.KO [31mLEAKS.KO [0x3900000046 : 67] [31m21.KO [31mLEAKS.KO [0x3900000046 : 66] [31m22.KO [31mLEAKS.KO [0x4600000046 : 70] [31m23.KO [31mLEAKS.KO [0x3000000030 : 48] [31m24.KO [31mLEAKS.KO [0x4600000046 : 300647710790] [31m25.KO [31mLEAKS.KO [0x3000000030 : 206158430256] [31m26.KO [31mLEAKS.KO [0x4600000046 : 70] [31m27.KO [31m28.KO [31mLEAKS.KO [0x4600000046 : 300647710790] [31m29.KO [31mLEAKS.KO [0x4400000046 : 54] upperx_test(59648,0x10c73cdc0) malloc: Incorrect checksum for freed object 0x7fd3a0c05a08: probably modified after being freed.
Corrupt value: 0x4600000046
upperx_test(59648,0x10c73cdc0) malloc: *** set a breakpoint in malloc_error_break to debug
[93m30.ABORT [31m30.KO [31m31.KO [31mLEAKS.KO [0x4400000046 : 54] [0m
[93mcategory: %[0m
[32m1.OK [32m2.OK [32m3.OK [32m4.OK [32m5.OK [32m6.OK [32m7.OK [0m
[93mcategory: mix[0m
[31m1.KO [31mLEAKS.KO [0x3200000030 : 65] mix_test(59687,0x10eebadc0) malloc: Incorrect checksum for freed object 0x7f9c6f504238: probably modified after being freed.
Corrupt value: 0x3000000030
mix_test(59687,0x10eebadc0) malloc: *** set a breakpoint in malloc_error_break to debug
[93m2.ABORT [0m

⠋ Processing output⠙ Processing outputErrors found:
Leaks in tests from: /Users/edogarci/francinette/tests/printf/printfTester/tests/p_test.cpp

For /Users/edogarci/francinette/tests/printf/printfTester/tests/x_test.cpp:
26:     TEST(2, print(" %x ", -1));
27:     TEST(3, print(" %x ", 1));
28:     TEST(4, print(" %x ", 9));
29:     TEST(5, print(" %x ", 10));
30:     TEST(6, print(" %x ", 11));
31:     TEST(7, print(" %x ", 15));
32:     TEST(8, print(" %x ", 16));
33:     TEST(9, print(" %x ", 17));
34:     TEST(10, print(" %x ", 99));
35:     TEST(11, print(" %x ", 100));
36:     TEST(12, print(" %x ", 101));
37:     TEST(13, print(" %x ", -9));
38:     TEST(14, print(" %x ", -10));
39:     TEST(15, print(" %x ", -11));
40:     TEST(16, print(" %x ", -14));
41:     TEST(17, print(" %x ", -15));
42:     TEST(18, print(" %x ", -16));
...

File too large. To see full report open: /Users/edogarci/francinette/temp/printf/printfTester/errors.log

⠋ Compiling tests: fsoares (my own tests)⠙ Compiling tests: fsoares (my own tests)⠹ Compiling tests: fsoares (my own tests)⠸ Compiling tests: fsoares (my own tests)⠼ Compiling tests: fsoares (my own tests)⠴ Compiling tests: fsoares (my own tests)⠦ Compiling tests: fsoares (my own tests)⠧ Compiling tests: fsoares (my own tests)⠇ Compiling tests: fsoares (my own tests)⠏ Compiling tests: fsoares (my own tests)⠋ Compiling tests: fsoares (my own tests)⠙ Compiling tests: fsoares (my own tests)⠹ Compiling tests: fsoares (my own tests)⠸ Compiling tests: fsoares (my own tests)ℹ Running tests: fsoares (my own tests)
[0;33mMandatory:[0m
[0;34mno format   [0m: [0;32m1.OK [0m[0;32m2.OK [0m
[0;34m% format    [0m: [0;32m1.OK [0m[0;32m2.OK [0m[0;32m3.OK [0m[0;32m4.OK [0m[0;32m5.OK [0m
[0;34mc format    [0m: [0;32m1.OK [0m[0;32m2.OK [0m[0;32m3.OK [0m[0;32m4.OK [0m[0;32m5.OK [0m[0;32m6.OK [0m
[0;34ms format    [0m: [0;32m1.OK [0m[0;32m2.OK [0m[0;32m3.OK [0m[0;32m4.OK [0m[0;32m5.OK [0m[0;32m6.OK [0m[0;32m7.OK [0m
[0;34mp format    [0m: [0;33m1.KO Abort
[0m[0;34md format    [0m: [0;32m1.OK [0m[0;32m2.OK [0m[0;32m3.OK [0m[0;32m4.OK [0m[0;32m5.OK [0m[0;32m6.OK [0m[0;32m7.OK [0m[0;32m8.OK [0m[0;32m9.OK [0m[0;32m10.OK [0m[0;32m11.OK [0m
[0;34mi format    [0m: [0;32m1.OK [0m[0;32m2.OK [0m[0;32m3.OK [0m[0;32m4.OK [0m[0;32m5.OK [0m[0;32m6.OK [0m[0;32m7.OK [0m[0;32m8.OK [0m[0;32m9.OK [0m[0;32m10.OK [0m[0;32m11.OK [0m
[0;34mu format    [0m: [0;32m1.OK [0m[0;32m2.OK [0m[0;32m3.OK [0m[0;32m4.OK [0m[0;32m5.OK [0m[0;32m6.OK [0m[0;32m7.OK [0m[0;32m8.OK [0m[0;32m9.OK [0m[0;32m10.OK [0m[0;32m11.OK [0m[0;32m12.OK [0m
[0;34mx format    [0m: [0;33m1.KO Abort
[0m[0;34mX format    [0m: [0;33m1.KO Abort
[0m[0;34mrandom      [0m: [0;33m1.KO Abort
[0m⠋ Processing output⠙ Processing output⠹ Processing output⠸ Processing output⠼ Processing output⠴ Processing output⠦ Processing output⠧ Processing output⠇ Processing outputErrors found:
=================================================================
==59745==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000013c at pc 0x00010d89b848 bp 0x7ffee2345310 sp 0x7ffee2345308
WRITE of size 4 at 0x60200000013c thread T0
    #0 0x10d89b847 in ft_func_type_p ft_conv_funcs_01.c:80
    #1 0x10d89da39 in ft_call_conv_func ft_printf.c:405
    #2 0x10d89df9a in ft_printf ft_printf.c:439
    #3 0x10d8676c5 in test_p mandatory.c:46
    #4 0x10d87baeb in main mandatory.c:155
    #5 0x7fff6d916cc8 in start+0x0 (libdyld.dylib:x86_64+0x1acc8)

Address 0x60200000013c is a wild pointer.
SUMMARY: AddressSanitizer: heap-buffer-overflow ft_conv_funcs_01.c:80 in ft_func_type_p
For p format:
Error in test 1: ft_printf("%p", ""): Memory problems!
     in pf_show_signal_msg pf_utils.c:51:7
     in pf_sigabort pf_utils.c:69:1
  -> in ft_func_type_p ft_conv_funcs_01.c:80:18
     in ft_call_conv_func ft_printf.c:405:3
     in ft_printf ft_printf.c
     in test_p mandatory.c:46:2
...

File too large. To see full report open: /Users/edogarci/francinette/temp/printf/fsoares/errors.log


Summary: no bonus

Failed tests: printfTester, fsoares
